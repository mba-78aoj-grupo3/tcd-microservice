version: '3.7'

services:
# Postgre
  postgres:
    image: postgres
    environment:
      POSTGRES_PASSWORD: "grupo3"
    ports:
      - "15432:5432"
    volumes:
      - ~/Documents/EngSoftware/microservice/tcd/tcd-microservice/resources/data:/var/lib/postgresql/data 
    networks:
      - network-docker
      
  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: "grupo3@gmail.com"
      PGADMIN_DEFAULT_PASSWORD: "grupo3"
    ports:
      - "16543:80"
    depends_on:
      - postgres
    networks:
      - network-docker
  zookeeper:
    image: wurstmeister/zookeeper
    expose:
      - "2181"
    networks:
      - network-docker  

#Kafka
  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    expose:
      - "9093"
    environment:
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://<your public IP here>:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:SASL_PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/kafka_server_jaas.conf"
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
    depends_on:
      - zookeeper
    volumes:
      - ./:/etc/kafka
    networks:
      - network-docker

  consul-server1:
    image: consul:1.9.3
    container_name: consul-server1
    restart: always
    volumes:
     - ./server1.json:/consul/config/server1.json:ro
     - ./certs/:/consul/config/certs/:ro
    networks:
      - network-docker
    ports:
      - "8500:8500"
      - "8600:8600/tcp"
      - "8600:8600/udp"
    command: "agent -bootstrap-expect=3"

## Consul
  consul-server2:
    image: consul:1.9.3
    container_name: consul-server2
    restart: always
    volumes:
     - ./server2.json:/consul/config/server2.json:ro
     - ./certs/:/consul/config/certs/:ro
    networks:
      - network-docker
    command: "agent -bootstrap-expect=3"

  consul-server3:
    image: consul:1.9.3
    container_name: consul-server3
    restart: always
    volumes:
     - ./server3.json:/consul/config/server3.json:ro
     - ./certs/:/consul/config/certs/:ro
    networks:
      - network-docker
    command: "agent -bootstrap-expect=3"

  consul-client:
    image: consul:1.9.3
    container_name: consul-client
    restart: always
    volumes:
     - ./client.json:/consul/config/client.json:ro
     - ./certs/consul-agent-ca.pem:/consul/config/certs/consul-agent-ca.pem:ro
    networks:
      - network-docker
    command: "agent"

networks: 
  network-docker:
    driver: bridge